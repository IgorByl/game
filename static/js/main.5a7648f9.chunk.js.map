{"version":3,"sources":["components/loadingMessage/index.js","components/navigation/navigation.js","components/app/App.js","serviceWorker.js","redux/reducers/userInfo.js","redux/reducers/audio.js","constants/enemyName/index.js","redux/reducers/enemyInfo.js","redux/reducers/listOfUsers.js","redux/reducers/index.js","index.js","redux/index.js"],"names":["LoadingMessage","react_default","a","createElement","className","history","createBrowserHistory","LandingPage","lazy","__webpack_require__","e","then","bind","BattlePage","Promise","all","Registration","Navigation","BrowserRouter","react","fallback","components_loadingMessage","Switch","Route","exact","path","component","render","Link","to","React","Component","App","navigation_Navigation","Boolean","window","location","hostname","match","initialState","userName","userDamaged","userHeal","attackPower","id","isAudioPlaying","firstPart","secondPart","thirdPart","randomName","arr","Math","floor","random","length","getMonsterName","concat","enemyName","enemyDamaged","enemyHeal","enemyTotalDamaged","rootReducer","combineReducers","userInfo","state","arguments","undefined","action","type","Object","objectSpread","payload","enemyInfo","audioStatus","listOfAllUsers","toConsumableArray","store","ehancers","compose","applyMiddleware","thunk","composeWithDevTools","createStore","configureStore","ReactDOM","es","app_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.5a7648f9.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./index.css\";\n\nconst LoadingMessage = () => (\n  <div className=\"loader\">\n    <div />\n    <div />\n    <div />\n    <div />\n    <div />\n    <div />\n    <div />\n    <div />\n    <div />\n  </div>\n);\n\nexport default LoadingMessage;\n","import React, { Fragment, Suspense, lazy } from \"react\";\nimport { BrowserRouter, Switch, Route, Link } from \"react-router-dom\";\nimport \"./navigation.css\";\nimport LoadingMessage from \"./../loadingMessage/index\";\nimport createBrowserHistory from \"history/createBrowserHistory\";\n\nconst history = createBrowserHistory();\n\nconst LandingPage = lazy(() =>\n  import(\"./../../components/landingPage/landingPage\")\n);\n\nconst BattlePage = lazy(() =>\n  import(\"./../../containers/battlePage/battlePage\")\n);\n\nconst Registration = lazy(() =>\n  import(\"./../../containers/registrationPage/registrationPage\")\n);\n\nexport default class Navigation extends React.Component {\n  render() {\n    return (\n      <BrowserRouter history={history}>\n        <Suspense fallback={<LoadingMessage />}>\n          <Switch>\n            <Route exact path=\"/\" component={LandingPage} />\n            <Route exact path=\"/battle\" component={BattlePage} />\n            <Route exact path=\"/registration\" component={Registration} />\n            <Route\n              render={() => (\n                <Fragment>\n                  <div className=\"navigation_fragment_notFoundPage\">\n                    <h1>Page not found</h1>\n                    <Link to=\"/\">Do you want to play?</Link>\n                  </div>\n                </Fragment>\n              )}\n            />\n          </Switch>\n        </Suspense>\n      </BrowserRouter>\n    );\n  }\n}\n","import React, { Component, Fragment } from \"react\";\nimport Navigation from \"./../../components/navigation/navigation\";\n\nclass App extends Component {\n  render() {\n    return (\n      <Fragment>\n        <Navigation />\n      </Fragment>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initialState = {\n  userName: \"unknown user\",\n  userDamaged: 0,\n  userHeal: 0,\n  attackPower: 100,\n  id: null\n};\n\nexport default function userInfo(state = initialState, action) {\n  const { userDamaged, userHeal, attackPower } = state;\n  switch (action.type) {\n    case \"SET_USER_NAME\":\n      return {\n        ...state,\n        userName: action.payload.userName,\n        id: action.payload.id\n      };\n    case \"SET_USER_HEALTH\":\n      return { ...state, userDamaged: userDamaged + attackPower };\n    case \"SET_USER_HEALTH_HEAL\":\n      return {\n        ...state,\n        userDamaged:\n          userDamaged >= 0 && userDamaged <= attackPower\n            ? 0\n            : userDamaged - attackPower,\n        userHeal: userHeal + attackPower\n      };\n    case \"INCREASE_USER_DAMAGED\":\n      return { ...state, attackPower: attackPower + 50 };\n    default:\n      return state;\n  }\n}\n","const initialState = {\n  isAudioPlaying: null\n};\n\nexport default function audioStatus(state = initialState, action) {\n  switch (action.type) {\n    case \"SET_AUDIO_STATUS\":\n      return { ...state, isAudioPlaying: action.payload };\n    default:\n      return state;\n  }\n}\n","const firstPart = [\n  \"Злобный\",\n  \"Ужасный\",\n  \"Огромный\",\n  \"Вонючий\",\n  \"Сопливый\",\n  \"Мокрый\",\n  \"Свирепый\",\n  \"Ядовитый\",\n  \"Колючий\",\n  \"Зубастый\"\n];\n\nconst secondPart = [\n  \" Огр\",\n  \" Гном\",\n  \" Эльф\",\n  \" Великан\",\n  \" Троль\",\n  \" Зомби\",\n  \" Орк\",\n  \" Трэнт\",\n  \" Кентавр\",\n  \" Дух\"\n];\n\nconst thirdPart = [\n  \" Пётр\",\n  \" Фёдор\",\n  \" Виталий\",\n  \" Станислав\",\n  \" Владимир\",\n  \" Виктор\",\n  \" Яков\",\n  \" Владислав\",\n  \" Сергей\",\n  \" Леонид\"\n];\n\nfunction randomName(arr) {\n  return arr[Math.floor(Math.random() * arr.length)];\n}\n\nexport default function getMonsterName() {\n  return `${randomName(firstPart)}${randomName(secondPart)}${randomName(\n    thirdPart\n  )}`;\n}\n","import getMonsterName from \"./../../constants/enemyName/index\";\n\nconst initialState = {\n  enemyName: getMonsterName(),\n  enemyDamaged: 0,\n  enemyHeal: 0,\n  enemyTotalDamaged: 0,\n  attackPower: 50\n};\n\nexport default function enemyInfo(state = initialState, action) {\n  const { enemyDamaged, enemyHeal, enemyTotalDamaged, attackPower } = state;\n  switch (action.type) {\n    case \"SET_ENEMY_NAME\":\n      return { ...state, enemyName: action.payload };\n    case \"SET_ENERMY_HEALTH\":\n      return {\n        ...state,\n        enemyDamaged: enemyDamaged + attackPower,\n        enemyTotalDamaged: enemyTotalDamaged + attackPower\n      };\n    case \"SET_ENERMY_HEALTH_HEAL\":\n      return {\n        ...state,\n        enemyDamaged:\n          enemyDamaged >= 0 && enemyDamaged <= attackPower\n            ? 0\n            : enemyDamaged - attackPower,\n        enemyHeal: enemyHeal + attackPower\n      };\n    case \"RENEW_ENERMY\":\n      return { ...state, enemyDamaged: 0 };\n    case \"CHANGE_ENEMY_NAME\":\n      return { ...state, enemyName: getMonsterName() };\n    default:\n      return state;\n  }\n}\n","const initialState = [];\n\nexport default function listOfAllUsers(state = initialState, action) {\n  switch (action.type) {\n    case \"SET_USERS\":\n      if (!action.payload) return state;\n      return action.payload;\n    case \"UPDATE_USER\":\n      return [...state, action.payload];\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from \"redux\";\nimport userInfo from \"./userInfo\";\nimport audioStatus from \"./audio\";\nimport enemyInfo from \"./enemyInfo\";\nimport listOfAllUsers from \"./listOfUsers\";\n\nconst rootReducer = combineReducers({\n  userInfo,\n  enemyInfo,\n  audioStatus,\n  listOfAllUsers\n});\n\nexport default rootReducer;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/app/App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { Provider } from \"react-redux\";\nimport { configureStore } from \"./redux\";\n\nconst store = configureStore({});\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();\n","import rootReducer from \"./reducers/index\";\nimport thunk from \"redux-thunk\";\nimport { createStore, compose, applyMiddleware } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension/logOnlyInProduction\";\n\nexport function configureStore(initialState) {\n  const ehancers = compose(\n    applyMiddleware(thunk),\n    composeWithDevTools()\n  );\n  return createStore(rootReducer, initialState, ehancers);\n}\n"],"sourceRoot":""}