{"version":3,"sources":["components/nickName/nickNameForm.js","components/modalWindow/modalWindowRegistration.js","containers/registrationPage/registrationPage.js","redux/actions/index.js","components/Scoreboard/index.js"],"names":["NameForm","state","value","handleChange","event","_this","setState","target","handleSubmit","preventDefault","user","userName","id","props","numberOfUsers","setUserName","react_default","a","createElement","className","onSubmit","this","type","placeholder","onChange","Component","ModalWindowRegistration","isVisible","toggleModal","render","react","onClick","Scoreboard","listOfAllUsers","Registration","componentDidMount","actions","setUsers","nickNameForm_NameForm","length","Link","to","modalWindowRegistration_ModalWindowRegistration","connect","userInfo","dispatch","bindActionCreators","__webpack_require__","r","__webpack_exports__","d","setEnemyHealth","reNewEnemy","increaseEnemyAttack","setEnemyHealthHeal","setEnemyName","changeEnemyName","setUserHealth","setUserHealthHeal","setPlayingStatus","setUsersSuccess","updateUser","updateUserSuccess","url","postUsers","fetch","method","headers","Content-Type","body","JSON","stringify","score","putUsers","concat","getUsers","name","payload","status","then","res","json","data","catch","err","console","warn","find","remUser","String","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","lodash__WEBPACK_IMPORTED_MODULE_2__","param","log","sortBy","o","reverse","map","elem","index","key"],"mappings":"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","file":"static/js/4.4eb7499a.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport \"./nickNameForm.css\";\n\nexport default class NameForm extends Component {\n  state = { value: \"\" };\n\n  handleChange = event => {\n    this.setState({ value: event.target.value });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    const user = {\n      userName: this.state.value,\n      id: this.props.numberOfUsers + 1\n    };\n    this.props.setUserName(user);\n  };\n\n  render() {\n    return (\n      <form className=\"form\" onSubmit={this.handleSubmit}>\n        <label>\n          Name\n          <input\n            className=\"input\"\n            type=\"text\"\n            placeholder=\"unknown user\"\n            value={this.state.value}\n            onChange={this.handleChange}\n          />\n        </label>\n        <input className=\"submitButton\" type=\"submit\" value=\"Submit\" />\n      </form>\n    );\n  }\n}\n","import React, { Component, Fragment } from \"react\";\nimport Scoreboard from \"./../Scoreboard/index\";\n\nexport default class ModalWindowRegistration extends Component {\n  state = {\n    isVisible: false\n  };\n\n  toggleModal = () => {\n    const { isVisible } = this.state;\n    this.setState({\n      isVisible: !isVisible\n    });\n  };\n\n  render = () => {\n    const { isVisible } = this.state;\n    return (\n      <Fragment>\n        <div>\n          <button className= 'chooseButton' onClick={this.toggleModal}>Scoreboard</button>\n        </div>\n        {isVisible && (\n          <div className=\"modalScore\">\n            <Scoreboard listOfAllUsers={this.props.listOfAllUsers} />\n            <button className= 'chooseButton' onClick={this.toggleModal}>close</button>\n          </div>\n        )}\n      </Fragment>\n    );\n  };\n}\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./registrationPage.css\";\nimport NameForm from \"../../components/nickName/nickNameForm\";\nimport ModalWindowRegistration from \"../../components/modalWindow/modalWindowRegistration\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport * as actions from \"./../../redux/actions\";\n\nclass Registration extends Component {\n  componentDidMount = () => {\n    this.props.actions.setUsers();\n  };\n\n  render() {\n    return (\n      <div className=\"registrationPageWrapper\">\n        <div className=\"registrationContentWrapper\">\n          <NameForm\n            setUserName={this.props.actions.setUserName}\n            numberOfUsers={\n              this.props.listOfAllUsers ? this.props.listOfAllUsers.length : 0\n            }\n          />\n          <Link to=\"/battle\">\n            <button className=\"lincButton\">PLAY</button>\n          </Link>\n          <ModalWindowRegistration listOfAllUsers={this.props.listOfAllUsers} />\n          <Link to=\"/\">\n            <button className=\"lincButton\">Back</button>\n          </Link>\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    user: state.userInfo.userName,\n    listOfAllUsers: state.listOfAllUsers\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    actions: bindActionCreators(actions, dispatch)\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Registration);\n","const url = \"https://5c3114afd18a50001463d3d3.mockapi.io/api/v1/users/\";\n\nconst postUsers = user =>\n  fetch(url, {\n    method: \"POST\",\n    headers: { \"Content-Type\": \"application/json\" },\n    body: JSON.stringify({\n      id: user.id,\n      userName: user.userName,\n      score: user.score\n    })\n  });\n\nconst putUsers = user =>\n  fetch(`${url}${user.id}`, {\n    method: \"PUT\",\n    headers: { \"Content-Type\": \"application/json\" },\n    body: JSON.stringify({\n      id: user.id,\n      userName: user.userName,\n      score: user.score\n    })\n  });\n\nconst getUsers = () => fetch(url);\n\nexport function setEnemyHealth() {\n  return {\n    type: \"SET_ENERMY_HEALTH\"\n  };\n}\n\nexport function reNewEnemy() {\n  return {\n    type: \"RENEW_ENERMY\"\n  };\n}\n\nexport function increaseEnemyAttack() {\n  return {\n    type: \"INCREASE_USER_DAMAGED\"\n  };\n}\n\nexport function setEnemyHealthHeal() {\n  return {\n    type: \"SET_ENERMY_HEALTH_HEAL\"\n  };\n}\n\nexport function setEnemyName(name) {\n  return {\n    type: \"SET_ENEMY_NAME\",\n    payload: name\n  };\n}\n\nexport function changeEnemyName() {\n  return {\n    type: \"CHANGE_ENEMY_NAME\"\n  };\n}\n\nexport function setUserName(user) {\n  return {\n    type: \"SET_USER_NAME\",\n    payload: user\n  };\n}\n\nexport function setUserHealth() {\n  return {\n    type: \"SET_USER_HEALTH\"\n  };\n}\n\nexport function setUserHealthHeal() {\n  return {\n    type: \"SET_USER_HEALTH_HEAL\"\n  };\n}\n\nexport function setPlayingStatus(status) {\n  return {\n    type: \"SET_AUDIO_STATUS\",\n    payload: status\n  };\n}\n\nexport function setUsers() {\n  return function thunk(dispatch) {\n    return getUsers()\n      .then(res => res.json())\n      .then(data => dispatch(setUsersSuccess(data)))\n      .catch(err => console.warn(err));\n  };\n}\n\nexport function setUsersSuccess(payload) {\n  return {\n    type: \"SET_USERS\",\n    payload\n  };\n}\n\nexport function updateUser(user) {\n  return function thunk(dispatch) {\n    getUsers()\n      .then(res => res.json())\n      .then(data => {\n        const remoteUser = data.find(remUser => remUser.id === String(user.id));\n        if (remoteUser) {\n          return putUsers(user)\n            .then(res => dispatch(setUsers()))\n            .catch(err => console.warn(err));\n        } else {\n          return postUsers(user)\n            .then(res => dispatch(setUsers()))\n            .catch(err => console.warn(err));\n        }\n      });\n  };\n}\n\nexport function updateUserSuccess(user) {\n  return {\n    type: \"UPDATE_USER\",\n    payload: user\n  };\n}\n","import React, { Fragment } from \"react\";\nimport \"./index.css\";\nimport { sortBy } from \"lodash\";\n\nconst Scoreboard = props => {\n  const sortlistOfAllUsers = param => {\n    return sortBy(param, [\n      function(o) {\n        return o.score;\n      }\n    ]).reverse();\n  };\n\n  console.log(props.listOfAllUsers);\n\n  return (\n    <Fragment>\n      <div>\n        <span className=\"scoreboardTitle\">Name</span> :{\" \"}\n        <span className=\"scoreboardTitle\">Result</span>\n      </div>\n      <ul className=\"ulList\">\n        {sortlistOfAllUsers(props.listOfAllUsers).map((elem, index) => (\n          <li className=\"listOfUsers\" key={index}>\n            {elem.userName} : {elem.score}\n          </li>\n        ))}\n      </ul>\n    </Fragment>\n  );\n};\n\nexport default Scoreboard;\n"],"sourceRoot":""}