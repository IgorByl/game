{"version":3,"sources":["components/loadingMessage/index.js","components/navigation/navigation.js","App.js","serviceWorker.js","redux/reducers/userInfo.js","redux/reducers/audio.js","constants/enemyName/index.js","redux/reducers/enemyInfo.js","redux/reducers/listOfUsers.js","redux/reducers/index.js","index.js","redux/index.js"],"names":["LoadingMessage","react_default","a","createElement","className","history","createBrowserHistory","LandingPage","lazy","__webpack_require__","e","then","bind","BattlePage","Promise","all","Registration","Navigation","BrowserRouter","react","fallback","components_loadingMessage","Switch","Route","exact","path","process","component","render","Link","to","React","Component","App","navigation_Navigation","Boolean","window","location","hostname","match","initialState","userName","userDamaged","userHeal","attackPower","id","isAudioPlaying","firstPart","secondPart","thirdPart","randomName","arr","Math","floor","random","length","getMonsterName","concat","enemyName","enemyDamaged","enemyHeal","enemyTotalDamaged","rootReducer","combineReducers","userInfo","state","arguments","undefined","action","type","Object","objectSpread","payload","enemyInfo","audioStatus","listOfAllUsers","toConsumableArray","store","ehancers","compose","applyMiddleware","thunk","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","composeWithDevTools","createStore","configureStore","ReactDOM","es","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.5e875dce.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./index.css\";\r\n\r\nconst LoadingMessage = () => (\r\n  <div className=\"loader\">\r\n    <div />\r\n    <div />\r\n    <div />\r\n    <div />\r\n    <div />\r\n    <div />\r\n    <div />\r\n    <div />\r\n    <div />\r\n  </div>\r\n);\r\n\r\nexport default LoadingMessage;\r\n","import React, { Fragment, Suspense, lazy } from \"react\";\r\nimport { BrowserRouter, Switch, Route, Link } from \"react-router-dom\";\r\nimport \"./navigation.css\";\r\nimport LoadingMessage from \"./../loadingMessage/index\";\r\nimport createBrowserHistory from \"history/createBrowserHistory\";\r\n\r\nconst history = createBrowserHistory();\r\n\r\nconst LandingPage = lazy(() =>\r\n  import(\"./../../components/landingPage/landingPage\")\r\n);\r\n\r\nconst BattlePage = lazy(() =>\r\n  import(\"./../../containers/battlePage/battlePage\")\r\n);\r\n\r\nconst Registration = lazy(() =>\r\n  import(\"./../../containers/registrationPage/registrationPage\")\r\n);\r\n\r\nexport default class Navigation extends React.Component {\r\n  render() {\r\n    return (\r\n      <BrowserRouter history={history}>\r\n        <Suspense fallback={<LoadingMessage />}>\r\n          <Switch>\r\n            <Route exact path={process.env.PUBLIC_URL + '/'} component={LandingPage} />\r\n            <Route exact path={process.env.PUBLIC_URL + '/battle'} component={BattlePage} />\r\n            <Route exact path={process.env.PUBLIC_URL + '/registration'} component={Registration} />\r\n            <Route\r\n              render={() => (\r\n                <Fragment>\r\n                  <div className=\"navigation_fragment_notFoundPage\">\r\n                    <h1>Page not found</h1>\r\n                    <Link to={process.env.PUBLIC_URL + '/'}>Do you want to play?</Link>\r\n                  </div>\r\n                </Fragment>\r\n              )}\r\n            />\r\n          </Switch>\r\n        </Suspense>\r\n      </BrowserRouter>\r\n    );\r\n  }\r\n}\r\n","import React, { Component, Fragment } from \"react\";\r\nimport Navigation from \"./components/navigation/navigation\";\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <Navigation />\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","const initialState = {\r\n  userName: \"unknown user\",\r\n  userDamaged: 0,\r\n  userHeal: 0,\r\n  attackPower: 100,\r\n  id: null\r\n};\r\n\r\nexport default function userInfo(state = initialState, action) {\r\n  const { userDamaged, userHeal, attackPower } = state;\r\n  switch (action.type) {\r\n    case \"SET_USER_NAME\":\r\n      return {\r\n        ...state,\r\n        userName: action.payload.userName,\r\n        id: action.payload.id\r\n      };\r\n    case \"SET_USER_HEALTH\":\r\n      return { ...state, userDamaged: userDamaged + attackPower };\r\n    case \"SET_USER_HEALTH_HEAL\":\r\n      return {\r\n        ...state,\r\n        userDamaged:\r\n          userDamaged >= 0 && userDamaged <= attackPower\r\n            ? 0\r\n            : userDamaged - attackPower,\r\n        userHeal: userHeal + attackPower\r\n      };\r\n    case \"INCREASE_USER_DAMAGED\":\r\n      return { ...state, attackPower: attackPower + 50 };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","const initialState = {\r\n  isAudioPlaying: null\r\n};\r\n\r\nexport default function audioStatus(state = initialState, action) {\r\n  switch (action.type) {\r\n    case \"SET_AUDIO_STATUS\":\r\n      return { ...state, isAudioPlaying: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","const firstPart = [\r\n  \"Злобный\",\r\n  \"Ужасный\",\r\n  \"Огромный\",\r\n  \"Вонючий\",\r\n  \"Сопливый\",\r\n  \"Мокрый\",\r\n  \"Свирепый\",\r\n  \"Ядовитый\",\r\n  \"Колючий\",\r\n  \"Зубастый\"\r\n];\r\n\r\nconst secondPart = [\r\n  \" Огр\",\r\n  \" Гном\",\r\n  \" Эльф\",\r\n  \" Великан\",\r\n  \" Троль\",\r\n  \" Зомби\",\r\n  \" Орк\",\r\n  \" Трэнт\",\r\n  \" Кентавр\",\r\n  \" Дух\"\r\n];\r\n\r\nconst thirdPart = [\r\n  \" Пётр\",\r\n  \" Фёдор\",\r\n  \" Виталий\",\r\n  \" Станислав\",\r\n  \" Владимир\",\r\n  \" Виктор\",\r\n  \" Яков\",\r\n  \" Владислав\",\r\n  \" Сергей\",\r\n  \" Леонид\"\r\n];\r\n\r\nfunction randomName(arr) {\r\n  return arr[Math.floor(Math.random() * arr.length)];\r\n}\r\n\r\nexport default function getMonsterName() {\r\n  return `${randomName(firstPart)}${randomName(secondPart)}${randomName(\r\n    thirdPart\r\n  )}`;\r\n}\r\n","import getMonsterName from \"./../../constants/enemyName/index\";\r\n\r\nconst initialState = {\r\n  enemyName: getMonsterName(),\r\n  enemyDamaged: 0,\r\n  enemyHeal: 0,\r\n  enemyTotalDamaged: 0,\r\n  attackPower: 50\r\n};\r\n\r\nexport default function enemyInfo(state = initialState, action) {\r\n  const { enemyDamaged, enemyHeal, enemyTotalDamaged, attackPower } = state;\r\n  switch (action.type) {\r\n    case \"SET_ENEMY_NAME\":\r\n      return { ...state, enemyName: action.payload };\r\n    case \"SET_ENERMY_HEALTH\":\r\n      return {\r\n        ...state,\r\n        enemyDamaged: enemyDamaged + attackPower,\r\n        enemyTotalDamaged: enemyTotalDamaged + attackPower\r\n      };\r\n    case \"SET_ENERMY_HEALTH_HEAL\":\r\n      return {\r\n        ...state,\r\n        enemyDamaged:\r\n          enemyDamaged >= 0 && enemyDamaged <= attackPower\r\n            ? 0\r\n            : enemyDamaged - attackPower,\r\n        enemyHeal: enemyHeal + attackPower\r\n      };\r\n    case \"RENEW_ENERMY\":\r\n      return { ...state, enemyDamaged: 0 };\r\n    case \"CHANGE_ENEMY_NAME\":\r\n      return { ...state, enemyName: getMonsterName() };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","const initialState = [];\r\n\r\nexport default function listOfAllUsers(state = initialState, action) {\r\n  switch (action.type) {\r\n    case \"SET_USERS\":\r\n      if (!action.payload) return state;\r\n      return action.payload;\r\n    case \"UPDATE_USER\":\r\n      return [...state, action.payload];\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport userInfo from \"./userInfo\";\r\nimport audioStatus from \"./audio\";\r\nimport enemyInfo from \"./enemyInfo\";\r\nimport listOfAllUsers from \"./listOfUsers\";\r\n\r\nconst rootReducer = combineReducers({\r\n  userInfo,\r\n  enemyInfo,\r\n  audioStatus,\r\n  listOfAllUsers\r\n});\r\n\r\nexport default rootReducer;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport { Provider } from \"react-redux\";\r\nimport { configureStore } from \"./redux\";\r\n\r\nconst store = configureStore({});\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\nserviceWorker.unregister();\r\n","import rootReducer from \"./reducers/index\";\r\nimport thunk from \"redux-thunk\";\r\nimport { createStore, compose, applyMiddleware } from \"redux\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension/logOnlyInProduction\";\r\n\r\nexport function configureStore(initialState) {\r\n  const ehancers = compose(\r\n    applyMiddleware(thunk),\r\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__(),\r\n    composeWithDevTools()\r\n  );\r\n  return createStore(rootReducer, initialState, ehancers);\r\n}"],"sourceRoot":""}